!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("PhyloCanvas"));else if("function"==typeof define&&define.amd)define(["PhyloCanvas"],t);else{var r=t("object"==typeof exports?require("PhyloCanvas"):e.PhyloCanvas);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(this,function(e){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){"use strict";function n(e,t){var r=e.url,n=e.method,o=e.data,a=new XMLHttpRequest;a.onreadystatechange=function(){4===a.readyState&&t(a)},a.open(n,r,!0),"GET"===n?a.send():a.send(o)}function o(e){e(i.Tree,"build",function(e,t){var r=this,o=a(t,3),i=o[0],u=o[1],s=o[2];s.ajax||i.match(u.fileExtension)?n({url:i,method:"GET"},function(t){if(t.status>=400){var n=new Error(t.responseText);return s.callback&&s.callback(n),r.loadError(n)}e.call(r,t.responseText,u,s)}):e.apply(this,t)})}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(s){o=!0,a=s}finally{try{!n&&u["return"]&&u["return"]()}finally{if(o)throw a}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();t["default"]=o;var i=r(1);e.exports=t["default"]},function(t,r){t.exports=e}])});